
server {
    listen 127.0.0.1:10246;
    set $service_name  "internal";
    set $proxy_upstream_name "internal";
    keepalive_timeout 0;
    gzip off;
    access_log off;
    location /healthz {
        return 200;
    }
    location /nginx_status {
        set $location_path  "/nginx_status";
        stub_status on;
    }
    location /configuration {
        set $location_path  "/configuration";
        client_max_body_size                    21m;
        client_body_buffer_size                 21m;
        proxy_buffering                         off;
        content_by_lua_block {
            configuration.call()
        }
    }
    location / {
        content_by_lua_block {
            ngx.exit(ngx.HTTP_NOT_FOUND)
        }
    }
}

lua_package_path "/etc/nginx/lua/?.lua;;";
init_by_lua_block {
    ngx.log(ngx.NOTICE, string.format("init_by_lua_block"))
    collectgarbage("collect")
    local ok, res
    ok, res = pcall(require, "monitor")
    if not ok then
        error("require failed: " .. tostring(res))
    else
        monitor = res
    end
}
init_worker_by_lua_block {
    ngx.log(ngx.NOTICE, string.format("init_worker_by_lua_block"))
    monitor.init_worker()
}
log_by_lua_block {
    monitor.call()
}
